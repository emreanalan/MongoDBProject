man low moderate high ---------
her rproduct için ayrı pofit  -------------
collusiona dahil olan productları %20 si collusion a dahil   ----------
detection da produc tproduct bakcak
normal ve gruplar diye ayır
tespit iiçn tarih verilebiliyo mu


========================================================================================================================

🏭 ManufacturerDataSet.py – Adım Adım Ne Yapıyor?
1. Ürün Listesi Hazırlanıyor
500 ürün (Product 1–Product 500) listeleniyor.

2. 25 Üretici (Manufacturer) Oluşturuluyor
Her üreticiye 20 farklı ürün atanıyor.

Örn: Man 1 → Product 1–Product 20

3. Her Üreticiye Rastgele Production Rate Veriliyor
Low, Moderate, High (Üretim Hızı)

Buna göre Cost multiplier belirleniyor:

Low: ×1.00

Moderate: ×0.95

High: ×0.90

4. Production Rate’e Göre Profit % Belirleniyor
Low → %2–4

Moderate → %6.5–9

High → %11–13.5

5. 115 Günlük Fiyatlandırma Yapılıyor
Her gün için ürün fiyatları hesaplanıyor:

Cost Price = Ürün maliyeti × çarpan

Price = Cost Price × (1 + profit%)

6. MongoDB’ye Şu Şekilde Kaydediliyor:
json
Copy
Edit
{
  "Date": "2025-01-01",
  "Production Rate": "Moderate",
  "Profit Percentage": 8.5,
  "Product 1": "Product 100",
  "Product 1 Cost Price": "950.00 TL",
  "Product 1 Price": "1,026.00 TL"
}
🏪 ShopsDataSet.py – Adım Adım Ne Yapıyor?
1. Tüm Manufacturer Verileri Cache Ediliyor
Man 1–Man 25 verileri (115 gün) belleğe alınır.

2. Her Manufacturer–Product İçin Profit % Belirleniyor
Her üretici–ürün çifti için 1 kez %profit atanır.

Örn: Man 11 - Product 300 → %5.45

Bu bilgiler: manufacturer_product_profit_cache

3. Shops Oluşturuluyor
Örn: Shop 1, Shop 2 ...

Her shop’a rastgele 2–3 üretici atanır.

4. Her Shop’a Hafif Profit Varyasyonu Ekleniyor
Shop, üretici-ürün profiti etrafında ±%0.1 sapmalı yeni değer üretir.

Örn: Man 11 - Product 300 → %5.52

5. Zam Günleri Rastgele Seçiliyor
Shop başına 2–5 gün, örn: [17, 48, 72]

6. 115 Günlük Fiyatlandırma Yapılıyor
İlk gün ve zam günlerinde:

shop_price = manufacturer_price × (1 + profit%)

Diğer günlerde:

En son kullanılan fiyat tekrar yazılır.

7. MongoDB’ye Şu Şekilde Kaydediliyor:
json
Copy
Edit
{
  "Date": "2025-01-17",
  "Store Type": "Shop 1",
  "Man 11 Products": {
    "Product 1": "Product 300",
    "Product 1 Manufacturer Price": "1000.00 TL",
    "Product 1 Shop Profit %": 5.52,
    "Product 1 Price": "1,055.20 TL"
  }
}


🔢 1. Collusion Grubu
Her grup 3–5 Shop’tan oluşur.

🏭 2. Manufacturer Seçimi
Her shop için 3–4 manufacturer seçilir.

Grup içindeki en az 2 manufacturer ortak olacak.

Diğerleri farklı olabilir, bu sayede:

Zam davranışında benzerlik korunur (ortak ürünler).

Farklılıklar da var → gerçekçi yapı korunur.

📌 Uygulama:
Önce grup için 2 ortak manufacturer seç.

Sonra her shop’a 1–2 tane daha ekstra manufacturer ekle.

🔍 3. Collusion Ürün Seçimi
Her shop’un sahip olduğu tüm ürünlerin birleşiminden:

%15–30 kadarı collusion ürünü olarak seçilir.

Bu ürünlere aynı günlerde aynı zam oranı uygulanır (✓ önceki mantık devam).

📈 4. Zam Oranları
Collusion ürünler: ürün bazlı sabit zam oranı (örneğin: Product 333 → %10.12 tüm shoplar için)

Diğer ürünler: her shop için küçük farklılık içeren profit % ile zam yapılır.



=============================================================================================================================================================
"C:\Users\emrea\Desktop\FINAL PROJECT\mongodb_env\Scripts\python.exe" "C:\Users\emrea\Desktop\FINAL PROJECT\MongoDBProject\Build\CollusionShopsDataSet.py"
🔵 Manufacturer cache oluşturuluyor...
✅ Manufacturer cache tamamlandı.


🔹 Grup 1
🔁 Ortak Manufacturer'lar: ['Man 23', 'Man 1']
  🛍️ Shop 12 -> ['Man 23', 'Man 1', 'Man 9', 'Man 22']
  🛍️ Shop 6 -> ['Man 23', 'Man 1', 'Man 5', 'Man 8']
  🛍️ Shop 11 -> ['Man 23', 'Man 1', 'Man 19', 'Man 15']
  🛍️ Shop 10 -> ['Man 23', 'Man 1', 'Man 22', 'Man 18']
  🛍️ Shop 18 -> ['Man 23', 'Man 1', 'Man 15']

🔹 Grup 2
🔁 Ortak Manufacturer'lar: ['Man 7', 'Man 6']
  🛍️ Shop 15 -> ['Man 7', 'Man 6', 'Man 22', 'Man 20']
  🛍️ Shop 1 -> ['Man 7', 'Man 6', 'Man 17', 'Man 25']
  🛍️ Shop 4 -> ['Man 7', 'Man 6', 'Man 13', 'Man 5']
  🛍️ Shop 13 -> ['Man 7', 'Man 6', 'Man 9', 'Man 22']

🔹 Grup 3
🔁 Ortak Manufacturer'lar: ['Man 4', 'Man 19']
  🛍️ Shop 20 -> ['Man 4', 'Man 19', 'Man 13', 'Man 5']
  🛍️ Shop 19 -> ['Man 4', 'Man 19', 'Man 24']
  🛍️ Shop 3 -> ['Man 4', 'Man 19', 'Man 10']
  🛍️ Shop 17 -> ['Man 4', 'Man 19', 'Man 5']
  🛍️ Shop 9 -> ['Man 4', 'Man 19', 'Man 6']

🔹 Grup 4
🔁 Ortak Manufacturer'lar: ['Man 18', 'Man 14']
  🛍️ Shop 5 -> ['Man 18', 'Man 14', 'Man 20']
  🛍️ Shop 16 -> ['Man 18', 'Man 14', 'Man 12', 'Man 21']
  🛍️ Shop 8 -> ['Man 18', 'Man 14', 'Man 4']
  🛍️ Shop 7 -> ['Man 18', 'Man 14', 'Man 5', 'Man 9']
  🛍️ Shop 14 -> ['Man 18', 'Man 14', 'Man 5']
  🛍️ Shop 2 -> ['Man 18', 'Man 14', 'Man 12']

🧠 Ortak ürünler belirleniyor ve collusion ürünleri seçiliyor...


🔵 Grup 1 - Ortak Tarih: 2025-01-01
   ⭐ Lider Shop: Shop 12
   🛒 Followerlar: ['Shop 6', 'Shop 11', 'Shop 10', 'Shop 18']
   ⏱️ Delay Günleri: {'Shop 12': 0, 'Shop 6': 7, 'Shop 11': 1, 'Shop 10': 2, 'Shop 18': 6}
   📅 Zam Günleri: ['2025-01-29', '2025-02-25', '2025-03-11', '2025-03-27', '2025-04-04', '2025-04-20']
   🎯 Collusion Ürünleri: ['Product 7', 'Product 444', 'Product 13', 'Product 441', 'Product 6', 'Product 448']


🔵 Grup 2 - Ortak Tarih: 2025-01-01
   ⭐ Lider Shop: Shop 15
   🛒 Followerlar: ['Shop 1', 'Shop 4', 'Shop 13']
   ⏱️ Delay Günleri: {'Shop 15': 0, 'Shop 1': 1, 'Shop 4': 6, 'Shop 13': 2}
   📅 Zam Günleri: ['2025-02-12', '2025-02-21', '2025-03-31', '2025-04-16']
   🎯 Collusion Ürünleri: ['Product 113', 'Product 130', 'Product 119', 'Product 124', 'Product 123', 'Product 140', 'Product 112', 'Product 126', 'Product 122']


🔵 Grup 3 - Ortak Tarih: 2025-01-01
   ⭐ Lider Shop: Shop 20
   🛒 Followerlar: ['Shop 19', 'Shop 3', 'Shop 17', 'Shop 9']
   ⏱️ Delay Günleri: {'Shop 20': 0, 'Shop 19': 4, 'Shop 3': 6, 'Shop 17': 3, 'Shop 9': 2}
   📅 Zam Günleri: ['2025-01-17', '2025-02-01', '2025-03-18', '2025-04-21']
   🎯 Collusion Ürünleri: ['Product 376', 'Product 79', 'Product 76', 'Product 65', 'Product 62', 'Product 77', 'Product 370', 'Product 364', 'Product 369']


🔵 Grup 4 - Ortak Tarih: 2025-01-01
   ⭐ Lider Shop: Shop 5
   🛒 Followerlar: ['Shop 16', 'Shop 8', 'Shop 7', 'Shop 14', 'Shop 2']
   ⏱️ Delay Günleri: {'Shop 5': 0, 'Shop 16': 7, 'Shop 8': 3, 'Shop 7': 6, 'Shop 14': 1, 'Shop 2': 7}
   📅 Zam Günleri: ['2025-01-25', '2025-02-07', '2025-02-23', '2025-03-25', '2025-04-05', '2025-04-20']
   🎯 Collusion Ürünleri: ['Product 266', 'Product 348', 'Product 269', 'Product 356', 'Product 359', 'Product 262', 'Product 273', 'Product 263']


Process finished with exit code 0




